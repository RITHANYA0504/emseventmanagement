<div class="events-container">
  <aside class="sidebar">
    <div class="calendar-container">
      <div id="calendar-only"></div>
    </div>
    <div class="nav-buttons">
      <button (click)="attendChange()" [ngClass]="{'active': choice === 'attending'}">Attending</button>
      <button (click)="hostChange()" [ngClass]="{'active': choice === 'hosting'}">Hosting</button>
      <button (click)="savedChange()" [ngClass]="{'active': choice === 'saved'}">Saved</button>
      <button (click)="pastChange()" [ngClass]="{'active': choice === 'past'}">Past</button>
    </div>
  </aside>

  <main class="content">
    <header class="sticky-header">
      <h1>Your Events</h1>
      <hr />
    </header>

    <section class="event-summary">
      <h3>
        {{ isToday() ? 'Today' : (selectedDate | date:'MMMM d, y') }}
      </h3>
      <h3 class="no-events" *ngIf="isEventEmpty">No Events Booked for this day</h3>
    </section>

    <section class="events-list">
      <app-all-events 
        [filterChoice]="choice" 
        [selectedDate]="selectedDate" 
        [userId]="userId" 
        (unsaveClicked)="unsaveClickedPar($event)" 
        (isEventEmpty)="f1($event)">
      </app-all-events>
    </section>
  </main>
</div>
:root {
  --primary-color: #006270;
  --light-grey: #f6f7f8;
  --text-dark: #333;
  --text-light: #707070;
  --border-radius: 12px;
}

body {
  margin: 0;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  color: var(--text-dark);
}

.events-container {
  display: flex;
  min-height: 100vh;
  background-color: #fff;
}

.sidebar {
  position: fixed;
  top: 0;
  left: 0;
  width: 26%;
  background-color: #ffffff;
  height: 100vh;
  border-right: 1px solid #e0e0e0;
  padding: 2rem 1rem;
  box-shadow: 2px 0 10px rgba(0, 0, 0, 0.05);
  display: flex;
  flex-direction: column;
  align-items: center;
}

.calendar-container {
  width: 100%;
  margin-bottom: 2rem;
  border-radius: var(--border-radius);
  overflow: hidden;
  background-color: #fafafa;
  box-shadow: 0 2px 10px rgba(0,0,0,0.05);
  padding: 1rem;
}

.nav-buttons {
  width: 100%;
  display: flex;
  flex-direction: column;
}

.nav-buttons button {
  padding: 12px 20px;
  margin-bottom: 10px;
  font-size: 16px;
  color: var(--text-light);
  background-color: transparent;
  border: none;
  border-radius: var(--border-radius);
  text-align: left;
  transition: all 0.2s ease-in-out;
  cursor: pointer;
}

.nav-buttons button:hover,
.nav-buttons button.active {
  background-color: var(--light-grey);
  color: var(--primary-color);
  font-weight: bold;
}

.content {
  margin-left: 26%;
  padding: 2rem;
  flex: 1;
}

.sticky-header {
  position: sticky;
  top: 0;
  background-color: #fff;
  z-index: 10;
  padding-bottom: 1rem;
}

.sticky-header h1 {
  margin: 0;
  font-size: 2rem;
  font-weight: bold;
}

.event-summary {
  margin-top: 1rem;
}

.event-summary h3 {
  font-size: 1.2rem;
  margin-bottom: 0.5rem;
}

.no-events {
  color: #b0b0b0;
  font-style: italic;
}

.events-list {
  margin-top: 2rem;
}

/* Flatpickr Customization */
.flatpickr-calendar.inline {
  border: none;
  box-shadow: none;
}

.flatpickr-day.selected {
  background-color: var(--primary-color);
  color: #fff;
}

.flatpickr-day.today {
  border: 2px solid rgba(0, 98, 112, 0.5);
}

.flatpickr-months,
.flatpickr-weekdays {
  background: transparent;
}

.flatpickr-prev-month,
.flatpickr-next-month {
  color: var(--primary-color);
  font-size: 1.2rem;
}
